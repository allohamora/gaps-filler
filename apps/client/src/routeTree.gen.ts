/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as VoiceChatRouteImport } from './routes/voice-chat'
import { Route as TextChatRouteImport } from './routes/text-chat'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MistakesIndexRouteImport } from './routes/mistakes/index'
import { Route as MistakesIdIndexRouteImport } from './routes/mistakes/$id/index'
import { Route as MistakesIdPracticeRouteImport } from './routes/mistakes/$id/practice'

const VoiceChatRoute = VoiceChatRouteImport.update({
  id: '/voice-chat',
  path: '/voice-chat',
  getParentRoute: () => rootRouteImport,
} as any)
const TextChatRoute = TextChatRouteImport.update({
  id: '/text-chat',
  path: '/text-chat',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MistakesIndexRoute = MistakesIndexRouteImport.update({
  id: '/mistakes/',
  path: '/mistakes/',
  getParentRoute: () => rootRouteImport,
} as any)
const MistakesIdIndexRoute = MistakesIdIndexRouteImport.update({
  id: '/mistakes/$id/',
  path: '/mistakes/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const MistakesIdPracticeRoute = MistakesIdPracticeRouteImport.update({
  id: '/mistakes/$id/practice',
  path: '/mistakes/$id/practice',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/text-chat': typeof TextChatRoute
  '/voice-chat': typeof VoiceChatRoute
  '/mistakes': typeof MistakesIndexRoute
  '/mistakes/$id/practice': typeof MistakesIdPracticeRoute
  '/mistakes/$id': typeof MistakesIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/text-chat': typeof TextChatRoute
  '/voice-chat': typeof VoiceChatRoute
  '/mistakes': typeof MistakesIndexRoute
  '/mistakes/$id/practice': typeof MistakesIdPracticeRoute
  '/mistakes/$id': typeof MistakesIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/text-chat': typeof TextChatRoute
  '/voice-chat': typeof VoiceChatRoute
  '/mistakes/': typeof MistakesIndexRoute
  '/mistakes/$id/practice': typeof MistakesIdPracticeRoute
  '/mistakes/$id/': typeof MistakesIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/text-chat'
    | '/voice-chat'
    | '/mistakes'
    | '/mistakes/$id/practice'
    | '/mistakes/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/text-chat'
    | '/voice-chat'
    | '/mistakes'
    | '/mistakes/$id/practice'
    | '/mistakes/$id'
  id:
    | '__root__'
    | '/'
    | '/text-chat'
    | '/voice-chat'
    | '/mistakes/'
    | '/mistakes/$id/practice'
    | '/mistakes/$id/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TextChatRoute: typeof TextChatRoute
  VoiceChatRoute: typeof VoiceChatRoute
  MistakesIndexRoute: typeof MistakesIndexRoute
  MistakesIdPracticeRoute: typeof MistakesIdPracticeRoute
  MistakesIdIndexRoute: typeof MistakesIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/voice-chat': {
      id: '/voice-chat'
      path: '/voice-chat'
      fullPath: '/voice-chat'
      preLoaderRoute: typeof VoiceChatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/text-chat': {
      id: '/text-chat'
      path: '/text-chat'
      fullPath: '/text-chat'
      preLoaderRoute: typeof TextChatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mistakes/': {
      id: '/mistakes/'
      path: '/mistakes'
      fullPath: '/mistakes'
      preLoaderRoute: typeof MistakesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mistakes/$id/': {
      id: '/mistakes/$id/'
      path: '/mistakes/$id'
      fullPath: '/mistakes/$id'
      preLoaderRoute: typeof MistakesIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mistakes/$id/practice': {
      id: '/mistakes/$id/practice'
      path: '/mistakes/$id/practice'
      fullPath: '/mistakes/$id/practice'
      preLoaderRoute: typeof MistakesIdPracticeRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TextChatRoute: TextChatRoute,
  VoiceChatRoute: VoiceChatRoute,
  MistakesIndexRoute: MistakesIndexRoute,
  MistakesIdPracticeRoute: MistakesIdPracticeRoute,
  MistakesIdIndexRoute: MistakesIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
